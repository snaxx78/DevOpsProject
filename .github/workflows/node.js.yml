# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      working-directory: ./userApi

    defaults:
      run:
        working-directory: ./userApi
    
    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    #REDIS install
      - uses: actions/checkout@v4
      - uses: shogo82148/actions-setup-redis@v1
        with:
          redis-version: "6.x"
      #REDIS test
      - name: Redis test
        run: redis-cli ping
        working-directory: ${{env.working-directory}}
      #NODE install
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          cache-dependency-path: ${{env.working-directory}}
          node-version: ${{ matrix.node-version }}
          cache: "npm"
      #install npm dependencies
      - name: Install npm dependencies
        run: npm install
        working-directory: ${{env.working-directory}}
      #run test script to check if its working
      - name: Run test
        run: npm test
        working-directory: ${{env.working-directory}}
      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: ./userApi


  deploy:
    name : Deploy to Azure
    defaults:
      run:
        working-directory: ./userApi
    permissions:
      contents: none
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Development'
    env:
      AZURE_WEBAPP_NAME: userapi-thibault-theo    # set this to your application's name
      AZURE_WEBAPP_PACKAGE_PATH: '.'      # set this to the path to your web app project, defaults to the repository root
      NODE_VERSION: '18.x'                # set this to the node version to use

    steps:
    - name: Download artifact from build job
      uses: actions/download-artifact@v3
      with:
        name: node-app

    - name: 'Deploy to Azure WebApp'
      id: deploy-to-webapp
      uses: azure/webapps-deploy@v2
      with:
        app-name: ${{ env.AZURE_WEBAPP_NAME }}
        publish-profile: ${{ secrets.AZURE_WEBAPP_PUBLISH_PROFILE }}
        package: ${{ env.AZURE_WEBAPP_PACKAGE_PATH }}


